{% extends 'form_div_layout.html.twig' %}

{% block form_start %}
	{%- if attr.multipleForm is defined -%}
		{% if attr.multipleForm %}
			{{ globalMultipleFormSetting.currentFormIsMultiple() }}
		{% else %}
			{{ globalMultipleFormSetting.currentFormIsNotMultiple() }}
		{% endif %}
	{%- endif -%}
	{% set attr = attr|merge({'role': attr.role|default('form')}) %}
	{% set method = method|upper %}
	{%- if method in ["GET", "POST"] -%}
		{% set form_method = method %}
	{%- else -%}
		{% set form_method = "POST" %}
	{%- endif -%}
	<form name="{{ form.vars.name }}" method="{{ form_method|lower }}" action="{{ action }}"
		{%- for attrname, attrvalue in attr -%}
			{{- " " -}}
			{%- if attrname is sameas('multipleForm') -%}
			{%- else -%}
				{{- attrname }}="{{ attrvalue }}"
			{%- endif -%}
		{%- endfor -%}
		{% if multipart %} enctype="multipart/form-data"{% endif %}>
	{%- if form_method != method -%}
		<input type="hidden" name="_method" value="{{ method }}" />
	{%- endif -%}
{% endblock form_start %}

{% block form_end %}
	{{ parent('form_end') }}
	{{ globalMultipleFormSetting.reset() }}
{% endblock form_end %}

{% block localized_row -%}
	<div class="form-line {{ attr.class|default('') }}">
		{{- form_label(form) -}}
		{{- form_errors(form) -}}
		{{- block('localized_form_rows') -}}
	</div>
{%- endblock localized_row %}

{% block localized_widget -%}
	{% for child in form %}
		{{- form_row(child, { localized: true, locale: child.vars.name, attr: { class: attr.class|default('form-line--compact')}}) -}}
	{% endfor %}
{%- endblock localized_widget %}

{% block form_row %}
	<div class="form-line {{ attr.class|default('') }}">
		{{ form_errors(form) }}
		{{ form_label(form, label, { label_attr: {class: 'form-line__label'} }) }}
		{{ form_widget(form, { attr: {class: 'form-line__field'} }) }}
	</div>
{% endblock form_row %}

{% block localized_form_rows -%}
	{% for child in form %}
		{{- form_row(child, { localized: true, locale: child.vars.name }) -}}
	{% endfor %}
{%- endblock localized_form_rows %}

{% block multidomain_row -%}
	<div class="form-line {{ attr.class|default('') }}">
		{{- form_label(form) -}}
		{{- form_errors(form) -}}
		{{- block('multidomain_form_rows') -}}
	</div>
{%- endblock multidomain_row %}

{% block multidomain_widget -%}
	{% for domainId, child in form %}
		{{- form_row(child, { multidomain: true, domainId: domainId, attr: { class: attr.class|default('form-line--compact')}}) -}}
	{% endfor %}
{%- endblock multidomain_widget %}

{% block multidomain_form_rows -%}
	{% for domainId, child in form %}
		{{- form_row(child, { multidomain: true, domainId: domainId }) -}}
	{% endfor %}
{%- endblock multidomain_form_rows %}

{% block checkbox_row %}
	<div class="checkbox">
		{{ form_label(form) }}
		{{ form_errors(form) }}
		{{ form_widget(form) }}
	</div>
{% endblock checkbox_row %}

{% block text_row -%}
	<div class="form-line {{ attr.class|default('') }}">
		{{ form_errors(form) }}
		{% if localized is defined %}
			{{ form_widget(form, { attr: { class: 'form-line__field form-line__field--icon' } }) }}
			<span class="form-line__icon form-line__icon--{{locale}}"></span>
		{% elseif multidomain is defined %}
			<span class="form-line__image">{{ domainIcon(domainId) }}</span> {{ form_label(form, getDomainName(domainId), { label_attr: {class: 'form-line__label form-line__label--with-image'} }) }}
			{{ form_widget(form, { attr: { class: 'form-line__field' } }) }}
		{% else %}
			{{ form_label(form, label, { label_attr: {class: 'form-line__label'} }) }}
			{{ form_widget(form, { attr: { class: 'form-line__field' } }) }}
		{% endif %}
	</div>
{%- endblock text_row %}

{% block textarea_row -%}
	<div class="form-line">
		{% if localized is defined %}
			{{ form_label(form, 'Překlad '|trans ~ localeFlag(locale), { label_attr: {class: 'form-line__label'}, raw: true }) }}
		{% elseif multidomain is defined %}
			<span class="form-line__image">{{ domainIcon(domainId) }}</span> {{ form_label(form, getDomainName(domainId), { label_attr: {class: 'form-line__label form-line__label--with-image'} }) }}
		{% else %}
			{{ form_label(form, label, { label_attr: {class: 'form-line__label'} }) }}
		{% endif %}
		{{- form_errors(form) -}}
		<div class="form-line__full">
			{{- form_widget(form) -}}
		</div>
	</div>
{%- endblock textarea_row %}

{% block url_list_row -%}
	<div class="form-line">
		{{ form_label(form, label, { label_attr: {class: 'form-line__label'} }) }}
		{{- form_errors(form) -}}
		<div class="form-line__full">
			{{- form_widget(form) -}}
		</div>
	</div>
{%- endblock url_list_row %}

{% block url_list_widget -%}
	<div class="js-entity-url-list" >
		{{ form_errors(form.newSlugsOnDomains) }}
		{% for domainId, friendlyUrlForms in form.toDelete %}
			<table class="table js-entity-url-list-domain-{{ domainId }}" data-new-url-prototype="{{ _self.urlListWidgetNewUrlRow(form.newSlugsOnDomains[domainId].vars.prototype)|e }}">
				<tr>
					<th>{{ 'Hlavní'|trans }}</th>
					<th>{{ domainIcon(domainId) }} {{ 'Doména '|trans ~ getDomainName(domainId) }}</th>
					<th>{{ form_errors(form.mainOnDomains[domainId]) }}</th>
				</tr>
				{% set mainUrl = findUrlByDomainId(form.vars.routeName, { id: entityId }, domainId) %}
				{% for slug, friendlyUrlForm in friendlyUrlForms %}
					<tr class="js-entity-url-list-friendly-url">
						<td class="table-col-10">
							{% set mainUrlRadioButton = form.mainOnDomains[domainId][slug] %}
							{{ form_widget(mainUrlRadioButton, { attr: { class: 'js-entity-url-list-select-main' } }) }}
						</td>
						<td class="table-col-40 js-entity-url-list-row-label">
							{% set absoluteUrl = form.vars.absoluteUrlsByDomainIdAndSlug[domainId][friendlyUrlForm.vars.value] %}
							{% if mainUrl == absoluteUrl %}
								<strong>{{ absoluteUrl }}</strong>
							{% else %}
								{{ absoluteUrl }}
							{% endif %}
							{{ form_widget(friendlyUrlForm, {attr: {class: 'js-entity-url-list-row-checkbox display-none'}}) }}
						</td>
						<td class="table-col-30">
							<div class="js-entity-url-list-row-delete-revert-wrapper">
								<div class="js-entity-url-list-row-delete-block">
									<button class="btn btn-iconic js-entity-url-list-row-delete-block-button" type="button">
										<i class="fa fa-trash-o"></i>{{ 'Smazat URL'|trans }}
									</button>
								</div>
								<div class="js-entity-url-list-row-revert-block display-none">
									<button class="btn btn-iconic js-entity-url-list-row-revert-block-button" type="button">
										<i class="fa fa-undo"></i>{{ 'Vrátit zpět'|trans }}
									</button>

									<span title="{{ 'Po uložení bude url smazána'|trans }}"
										class="js-tooltip cursor-help form-icon" data-toggle="tooltip" data-placement="bottom">
										<i class="fa fa-info"></i>
									</span>
								</div>
							</div>
							<span title="{{ 'Hlavní URL nelze smazat'|trans }}"
								class="js-entity-url-list-info-main-delete js-tooltip cursor-help form-icon display-none" data-toggle="tooltip" data-placement="right">
								<i class="fa fa-info"></i>
							</span>
						</td>
					</tr>
				{% endfor %}
				{% for newUrlForm in form.newSlugsOnDomains[domainId] %}
					{{ _self.urlListWidgetNewUrlRow(newUrlForm, form.vars.domainUrlsById[domainId]) }}
				{% endfor %}
			</table>
		{% endfor %}
		<button type="button" class="js-entity-url-list-button-add-url btn btn-primary" data-window-content-ajax-url="{{ url('admin_urllist_newurlform') }}">
			<i class="fa fa-plus fa-lg"></i> {{ 'Přidat URL'|trans }}
		</button>
	</div>
{%- endblock url_list_widget -%}

{% macro urlListWidgetNewUrlRow(form, domainUrl) %}
	<tr class="js-entity-url-list-new-row">
		<td class="table-col-10"></td>
		<td class="table-col-40">
			<span class="js-entity-url-list-new-row-domain-url">{{ domainUrl }}/</span><span class="js-entity-url-list-new-row-slug">{{ form.vars.value }}</span>
			{{ form_errors(form) }}
			{{ form_widget(form, {attr: {class: 'js-entity-url-list-new-row-slug-input display-none', id: null}}) }}
		</td>
		<td class="table-col-30">
			<button class="btn btn-iconic js-entity-url-list-new-row-delete-button" type="button">
				<i class="fa fa-trash-o"></i>{{ 'Smazat URL'|trans }}
			</button>
		</td>
	</tr>
{% endmacro %}

{% block ckeditor_row -%}
	{{ block('textarea_row') }}
{%- endblock ckeditor_row %}

{% block form_label %}
	{% spaceless %}
		{% if label is not sameas(false) %}
			{% if not compound %}
				{% set label_attr = label_attr|merge({'for': id}) %}
			{% endif %}
			{% if required %}
				{% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
			{% endif %}
			{% if label is empty %}
				{% set label = name|humanize %}
			{% endif %}
			<label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
				{% if raw is not defined %}
					{{ label }}
				{% else %}
					{{ label|raw }}
				{% endif %}
				{% if not withoutColon|default(false) %}:{% endif %}
				{% if required %}<span class="form-input-required">*</span>{% endif %}
			</label>
		{% endif %}
	{% endspaceless %}
{% endblock form_label %}

{% block checkbox_label %}
	{% spaceless %}
		{% set withoutColon = true %}
		{{ block('form_label') }}
	{% endspaceless %}
{% endblock checkbox_label %}

{% block product_row %}
	{{ block('form_row') }}
{% endblock product_row %}

{% block product_widget %}
	<span class="js-product-picker-container" data-placeholder="{{ placeholder }}">
		<input
			class="form-control js-product-picker-label"
			value="{{ productName|default(placeholder) }}"
			disabled="disabled"
			readonly="readonly"
		/>
		<button
			type="button"
			data-product-picker-url="{{ url('admin_productpicker_picksingle', {parentInputId: '__input_id__'}) }}"
			class="js-product-picker-create-picker-button"
			title="{{ 'Kliknutím přejdete k výběru produktu'|trans }}"
			type="button"
		>
			...
		</button>
		{% if enableRemove %}
			<a href="#" class="js-product-picker-remove-button display-none">
				<i class="fa fa-trash-o" title="{{ 'Odebrat'|trans }}"></i>
			</a>
		{% endif %}
		{{- form_widget(form, {attr: {class: 'js-product-picker-input'}}) -}}
	</span>
{% endblock product_widget %}

{% block products_row -%}
	<div class="form-line">
		{{- form_label(form) -}}
		{{- form_errors(form) -}}
		<div class="form-line__full">
			{{- form_widget(form) -}}
		</div>
	</div>
{%- endblock %}

{% macro productsWidgetItem(productName, form, sortable) %}
	<li class="js-products-picker-item in-simple-item">
		{%if sortable %}
			<span class="left top-right-padding-5-px">
				<i class="cursor-move fa fa-arrows"></i>
			</span>
		{% endif %}
		<span class="in-simple-item__icon js-products-picker-item-button-delete cursor-pointer">
			{{ form_widget(form, {attr: {class: 'js-products-picker-item-input'}}) }}
			<i class="fa fa-trash-o"></i>
		</span>
		<span class="in-simple-item__desc">
			<span class="js-products-picker-item-product-name">{{ productName }}</span>
		</span>
	</li>
{% endmacro %}

{% block products_widget %}
	<div
		class="js-products-picker"
		data-products-picker-prototype="{{ _self.productsWidgetItem('', form.vars.prototype, form.vars.sortable)|e }}"
		data-products-picker-url="{{ url('admin_productpicker_pickmultiple', {jsInstanceId: '__js_instance_id__'}) }}"
		data-products-picker-main-product-id="{{ form.vars.main_product ? form.vars.main_product.id : '' }}"
	>
		<ul class="js-products-picker-items mb-1 list-style-none">
			{% for key, productForm in form %}
				{{ _self.productsWidgetItem(form.vars.products[key].name, productForm, form.vars.sortable) }}
			{% endfor %}
		</ul>
		<a href="#" class="btn btn-primary js-products-picker-button-add">
			<i class="fa fa-plus fa-lg"></i>
			{{ 'Přidat zboží'|trans }}
		</a>
	</div>
{% endblock products_widget %}

{% macro categoriesWidgetItem(categoryDetails, form) %}
	<ul class="js-category-tree-form-children-container">
		{% for categoryDetail in categoryDetails %}
			{% set categoryForm = form[categoryDetail.category.id] %}
			<li class="checkbox js-category-tree-form-item">
				<i class="fa fa-square-o js-category-tree-form-item-icon{{ categoryDetail.children|length > 0 ? ' cursor-pointer' : ''}}"></i>
				<label>
					{{ form_widget(categoryForm, { attr: { class: 'js-category-tree-form-item-checkbox' } }) }}
					{{ categoryForm.vars.label }}
				</label>
				{{ _self.categoriesWidgetItem(categoryDetail.children, form) }}
			</li>
		{% endfor %}
	</ul>
{% endmacro %}

{% block categories_widget %}
	<div class="form-line__field category-tree category-tree--form js-category-tree-form">
		{{ _self.categoriesWidgetItem(form.vars.categoryDetails, form) }}
	</div>
{% endblock categories_widget %}

{% block form_errors %}
	{% set errors_attr = errors_attr|default({})|merge({'class': (errors_attr.class|default(''))}) %}
	{% spaceless %}
		<div class="in-message in-message--danger js-validation-errors-list js-validation-error-list-{{ form.vars.id }} {{ errors_attr.class }} {{ errors|length > 0 ? '' : ' display-none' }}">
			<ul class="in-message__list">
				{% if errors|length > 0 %}
					{% for error in errors %}
						<li>{{ error.message }}</li>
					{% endfor %}
				{% endif %}
			</ul>
		</div>
	{% endspaceless %}
{% endblock form_errors %}

{% block form_widget_simple %}
	{% set attr = attr|merge({'class': (attr.class|default('') ~ ' form-control')|trim}) %}
	{{ parent('form_widget_simple') }}
	{{- block('appendix_block') -}}
{% endblock form_widget_simple %}

{% block textarea_widget %}
	{% set attr = attr|merge({'class': (attr.class|default('') ~ ' form-control')|trim}) %}
	{% set attr = attr|merge({'rows': (attr.rows|default('8'))}) %}
	{{ parent('textarea_widget') }}
{% endblock textarea_widget %}

{% block button_widget %}
	{% set attr = attr|merge({'class': (attr.class|default('') ~ ' btn btn-primary button')|trim}) %}

	{%- if label is empty -%}
		{%- if label_format is not empty -%}
			{% set label = label_format|replace({
				'%name%': name,
				'%id%': id,
			}) %}
		{%- else -%}
			{% set label = name|humanize %}
		{%- endif -%}
	{%- endif -%}
	<button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ label }}</button>
{% endblock button_widget %}

{% block choice_widget_collapsed -%}
	{% if required and placeholder is none and not placeholder_in_choices and not multiple -%}
		{% set required = false %}
	{% endif %}
	{% set attr = attr|merge({'class': (attr.class|default('') ~ ' form-control')|trim}) %}
	<select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
		{% if placeholder is not none -%}
			<option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ placeholder }}</option>
		{%- endif %}
		{%- if preferred_choices|length > 0 -%}
			{% set options = preferred_choices %}
			{{- block('choice_widget_options') -}}
			{% if choices|length > 0 and separator is not none -%}
				<option disabled="disabled">{{ separator }}</option>
			{%- endif %}
		{%- endif -%}
		{% set options = choices -%}
		{{- block('choice_widget_options') -}}
	</select>
{%- endblock choice_widget_collapsed %}

{% block choice_widget_options -%}
	{% for group_label, choice in options %}
		{%- if choice is iterable -%}
			<optgroup label="{{ group_label }}">
				{% set options = choice %}
				{{- block('choice_widget_options') -}}
			</optgroup>
		{%- else -%}
			<option value="{{ choice.value }}"{% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{{ choice.label }}</option>
		{%- endif -%}
	{% endfor %}
{%- endblock choice_widget_options %}

{% block choice_widget_expanded %}
	{% spaceless %}
			<div {{ block('widget_container_attributes') }}>
			{% for child in form %}
				<div class="radio checkbox">
					<label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
						{{ form_widget(child) }}
						{{ child.vars.label }}
					</label>
				</div>
			{% else %}
				{{ empty_message|default('Není z čeho vybírat.') }}
			{% endfor %}
			</div>
	{% endspaceless %}
{% endblock choice_widget_expanded %}

{% block widget_attributes -%}
	{%- if globalMultipleFormSetting.currentFormMultiple -%}
		{% set attr = attr|merge({'class': (attr.class|default('') ~ ' id__' ~ id)|trim}) %}
		{%- if htmlId|default(false) %} id="{{ htmlId }}"{% endif -%}
	{%- else -%}
		{{- " " -}}
		id="{{ id }}"
	{%- endif -%}
	{{- " " -}}
	name="{{ full_name }}"
	{%- if htmlId|default(false) %} id="{{ htmlId }}"{% endif -%}
	{%- if read_only %} readonly="readonly"{% endif -%}
	{%- if disabled %} disabled="disabled"{% endif -%}
	{%- if required %} required="required"{% endif -%}
	{%- for attrname, attrvalue in attr -%}
		{{- " " -}}
		{%- if attrname in ['placeholder', 'title'] -%}
			{{- attrname }}="{{ attrvalue }}"
		{%- elseif attrvalue is sameas(true) -%}
			{{- attrname }}="{{ attrname }}"
		{%- elseif attrvalue is not sameas(false) -%}
			{{- attrname }}="{{ attrvalue }}"
		{%- endif -%}
	{%- endfor -%}
{%- endblock widget_attributes %}

{% block button_attributes -%}
	{%- if globalMultipleFormSetting.currentFormMultiple -%}
		{% set attr = attr|merge({'class': (attr.class|default('') ~ ' id__' ~ id)|trim}) %}
		{%- if htmlId|default(false) %} id="{{ htmlId }}"{% endif -%}
	{%- else -%}
		{{- " " -}}
		id="{{ id }}"
	{%- endif -%}
	{{- " " -}}
	name="{{ full_name }}"{% if disabled %} disabled="disabled"{% endif -%}
	{%- for attrname, attrvalue in attr -%}
		{{- " " -}}
		{%- if attrname in ['placeholder', 'title'] -%}
			{{- attrname }}="{{ attrvalue }}"
		{%- elseif attrvalue is sameas(true) -%}
			{{- attrname }}="{{ attrname }}"
		{%- elseif attrvalue is not sameas(false) -%}
			{{- attrname }}="{{ attrvalue }}"
		{%- endif -%}
	{%- endfor -%}
{%- endblock button_attributes %}

{% block money_widget %}
	{% set value = value|cropZeros %}
	{{ parent('money_widget') }}
{% endblock money_widget %}

{% block number_widget %}
	{% set value = value|cropZeros %}
	{{ parent('number_widget') }}
{% endblock number_widget %}

{% block appendix_block %}
	{% if icon is defined %}
		<i class="fa fa-{{ icon.type|default('info-circle') }} cursor-help form-line__info js-tooltip"
			data-toggle="tooltip" data-placement="{{ icon.placement|default('right') }}"
			title="{{ icon.title }}"
		 ></i>
	{% endif %}
	{% if symbolAfterInput is defined %}
		<span class="form-line__appendix">{{ symbolAfterInput }}</span>
	{% endif %}
{% endblock %}
