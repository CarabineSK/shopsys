<?xml version="1.0" encoding="UTF-8"?>
<project name="ShopSys6-dev" default="build-demo-ci">

	<target name="build-dev" depends="clean,composer-dev,npm,domains-urls-check,assetic,assets,dirs-clean,dirs-structure,dump-translations-custom,db-migrations,db-check-schema,create-domains-data,grunt,checks-diff" />
	<target name="build-demo-dev" depends="clean,composer-dev,npm,domains-urls-check,assetic,assets,dirs-clean,dirs-structure,dump-translations-custom,db-demo,grunt,checks-diff" />
	<target name="build-demo-ci" depends="clean,composer-dev,npm,domains-urls-check,assetic,assets,dirs-clean,dirs-structure,dump-translations-custom,db-demo,grunt,img-demo,checks-ci" />
	<target name="build-demo-ci-diff" depends="clean,composer-dev,npm,domains-urls-check,assetic,assets,dirs-clean,dirs-structure,dump-translations-custom,db-demo,grunt,img-demo,checks-ci-diff" />

	<target name="checks" depends="standards,tests" />
	<target name="checks-diff" depends="standards-diff,tests" />
	<target name="checks-ci" depends="standards-ci,tests,tests-acceptance" />
	<target name="checks-ci-diff" depends="standards-ci-diff,tests,tests-acceptance" />

	<target name="standards" depends="phplint,phpcs-fixer,phpcs,phpmd,twig-lint,yaml-lint" />
	<target name="standards-diff" depends="phplint-diff,phpcs-fixer-diff,phpcs-diff,phpmd-diff,twig-lint-diff,yaml-lint" />
	<target name="standards-ci" depends="standards,phpstorm-inspect" />
	<target name="standards-ci-diff" depends="standards-diff,phpstorm-inspect" />

	<target name="test-db-demo" depends="test-db-drop,test-db-create,test-db-migrations,test-db-check-schema,test-db-fixtures-demo,test-create-domains-data" />
	<target name="test-db-performance" depends="test-db-demo,test-db-fixtures-performance" />
	<target name="tests" depends="test-db-demo,tests-unit,tests-db,tests-crawler" />

	<target name="tests-performance-run" depends="clean,test-db-performance,tests-performance-warmup,tests-performance" />

	<target name="composer-dev">
		<exec
			executable="${path.composer.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="install"/>
		</exec>
	</target>

	<target name="docs">
		<exec executable="${path.grunt.executable}" passthru="true" checkreturn="true">
			<arg value="docs" />
		</exec>
	</target>

	<target name="dump-translations">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="translation:extract" />
			<arg value="--bundle=SS6ShopBundle" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Controller" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Form" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Model" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Resources/views" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Resources/scripts" />
			<arg value="--exclude-dir=admin/plugins" />
			<arg value="--exclude-dir=frontend/plugins" />
			<arg value="--output-format=po" />

			<arg value="en" />
		</exec>
	</target>

	<target name="diff-files">
		<exec
			command="git merge-base origin/master HEAD"
			outputProperty="git.merge.base"
		/>

		<exec
			command="git diff --name-only --diff-filter=ACMR ${git.merge.base} ${path.src}"
			outputProperty="git.files.changed"
		/>

		<exec
			command="git ls-files --others --exclude-standard ${path.src}"
			outputProperty="git.files.unstaged"
		/>

		<property name="diff.files.all" value="${git.files.changed}${line.separator}${git.files.unstaged}" />

		<property name="diff.files.php" value="${diff.files.all}">
			<filterchain>
				<linecontainsregexp>
					<!-- linecontainsregexp splits lines using \n, so string can end with whitespace -->
					<regexp pattern="\.php\s*$" />
				</linecontainsregexp>

				<!-- ignore Codeception generated class for running acceptance tests -->
				<linecontainsregexp>
					<regexp pattern="^(?!src/SS6/ShopBundle/Tests/Test/Codeception/_generated/AcceptanceTesterActions.php).+$" />
				</linecontainsregexp>
			</filterchain>
		</property>

		<property name="diff.files.twig" value="${diff.files.all}">
			<filterchain>
				<linecontainsregexp>
					<!-- linecontainsregexp splits lines using \n, so string can end with whitespace -->
					<regexp pattern="\.twig\s*$" />
				</linecontainsregexp>

				<replaceregexp>
					<regexp pattern="[\r\n]+" replace=" " />
				</replaceregexp>
			</filterchain>
		</property>
	</target>

	<target name="diff-files-phpcs" depends="diff-files">
		<property name="diff.files.phpcs" value="${diff.files.php}">
			<filterchain>
				<replaceregexp>
					<regexp pattern="[\r\n]+" replace=" " />
				</replaceregexp>
			</filterchain>
		</property>
	</target>

	<target name="phpcbf">
		<exec
			executable="${path.phpcbf.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="--standard=${path.phpcs.ruleset}"/>
			<arg value="--extensions=php"/>
			<arg value="--encoding=utf-8"/>
			<arg value="--ignore=${path.phpcs.ignored}"/>
			<arg value="--no-patch"/>
			<arg path="${path.src}"/>
		</exec>
	</target>

	<target name="phpcbf-diff" depends="diff-files-phpcs">
		<if>
			<not>
				<equals arg1="${diff.files.phpcs}" arg2="" trim="true" />
			</not>
			<then>
				<exec
						executable="${path.phpcbf.executable}"
						logoutput="true"
						passthru="true"
						checkreturn="true"
				>
					<arg value="--standard=${path.phpcs.ruleset}"/>
					<arg value="--extensions=php"/>
					<arg value="--encoding=utf-8"/>
					<arg value="--ignore=${path.phpcs.ignored}"/>
					<arg value="--no-patch"/>
					<arg line="${diff.files.phpcs}"/>
				</exec>
			</then>
		</if>
	</target>

	<target name="phpcs">
		<exec
			executable="${path.phpcs.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="--standard=${path.phpcs.ruleset}"/>
			<arg value="--extensions=php"/>
			<arg value="--encoding=utf-8"/>
			<arg value="-sp"/>
			<arg value="--ignore=${path.phpcs.ignored}"/>
			<arg path="${path.src}"/>
		</exec>
	</target>

	<target name="phpcs-diff" depends="diff-files-phpcs">
		<if>
			<not>
				<equals arg1="${diff.files.phpcs}" arg2="" trim="true" />
			</not>
			<then>
				<exec
						executable="${path.phpcs.executable}"
						logoutput="true"
						passthru="true"
						checkreturn="true"
				>
					<arg value="--standard=${path.phpcs.ruleset}"/>
					<arg value="--extensions=php"/>
					<arg value="--encoding=utf-8"/>
					<arg value="-sp"/>
					<arg value="--ignore=${path.phpcs.ignored}"/>
					<arg line="${diff.files.phpcs}"/>
				</exec>
			</then>
		</if>
	</target>

	<target name="phpcs-fixer">
		<exec
			executable="${path.phpcs-fixer.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="fix" />
			<arg value="--config-file=${path.phpcs-fixer.configuration}" />
			<arg value="--dry-run" />
			<arg value="--verbose" />
			<arg value="--diff" />
			<arg path="${path.src}" />
		</exec>
	</target>

	<target name="phpcs-fixer-fix">
		<exec
			executable="${path.phpcs-fixer.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="false"
		>
			<arg value="fix" />
			<arg value="--config-file=${path.phpcs-fixer.configuration}" />
			<arg value="--verbose" />
			<arg path="${path.src}" />
		</exec>
	</target>

	<target name="phpcs-fixer-diff" depends="diff-files">
		<property name="diff.files.phpcs-fixer" value="${diff.files.all}">
			<filterchain>
				<replaceregexp>
					<regexp pattern="[\r\n]+" replace=" " />
				</replaceregexp>
			</filterchain>
		</property>

		<if>
			<not>
				<equals arg1="${diff.files.phpcs-fixer}" arg2="" trim="true" />
			</not>
			<then>
				<exec
					executable="${path.phpcs-fixer.executable}"
					logoutput="true"
					passthru="true"
					checkreturn="true"
				>
					<arg value="fix" />
					<arg value="--config-file=${path.phpcs-fixer.configuration}" />
					<arg value="--dry-run" />
					<arg value="--verbose" />
					<arg value="--diff" />
					<arg path="${diff.files.phpcs-fixer}"/>
				</exec>
			</then>
		</if>
	</target>

	<target name="phpcs-fixer-fix-diff" depends="diff-files">
		<property name="diff.files.phpcs-fixer" value="${diff.files.all}">
			<filterchain>
				<replaceregexp>
					<regexp pattern="[\r\n]+" replace=" " />
				</replaceregexp>
			</filterchain>
		</property>

		<if>
			<not>
				<equals arg1="${diff.files.phpcs-fixer}" arg2="" trim="true" />
			</not>
			<then>
				<exec
					executable="${path.phpcs-fixer.executable}"
					logoutput="true"
					passthru="true"
					checkreturn="true"
				>
					<arg value="fix" />
					<arg value="--config-file=${path.phpcs-fixer.configuration}" />
					<arg value="--verbose" />
					<arg value="--diff" />
					<arg path="${diff.files.phpcs-fixer}"/>
				</exec>
			</then>
		</if>
	</target>

	<target name="phplint">
		<exec
			executable="${path.phplint.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg path="${path.src}"/>
			<arg value="--exclude"/>
			<arg value="${path.phplint.ignored}"/>
		</exec>
	</target>

	<target name="phplint-diff" depends="diff-files">
		<property name="diff.files.phplint" value="${diff.files.php}">
			<filterchain>
				<replaceregexp>
					<regexp pattern="[\r\n]+" replace=" " />
				</replaceregexp>
			</filterchain>
		</property>

		<if>
			<not>
				<equals arg1="${diff.files.phplint}" arg2="" trim="true" />
			</not>
			<then>
				<exec
					executable="${path.phplint.executable}"
					logoutput="true"
					passthru="true"
					checkreturn="true"
				>
					<arg line="${diff.files.phplint}" />
				</exec>
			</then>
		</if>
	</target>

	<target name="phpmd">
		<exec
			executable="${path.phpmd.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="${path.src}"/>
			<arg value="text"/>
			<arg value="${path.phpmd.ruleset}"/>
			<arg value="--extensions=php"/>
			<arg value="--exclude"/>
			<arg value="${path.phpmd.ignored}"/>
		</exec>
	</target>

	<target name="phpmd-diff" depends="diff-files">
		<property name="diff.files.phpmd" value="${diff.files.php}">
			<filterchain>
				<replaceregexp>
					<regexp pattern="[\r\n]+" replace="," />
					<regexp pattern=",$" replace="" />
				</replaceregexp>
			</filterchain>
		</property>

		<if>
			<not>
				<equals arg1="${diff.files.phpmd}" arg2="" trim="true" />
			</not>
			<then>
				<exec
					executable="${path.phpmd.executable}"
					logoutput="true"
					passthru="true"
					checkreturn="true"
				>
					<arg value="${diff.files.phpmd}"/>
					<arg value="text"/>
					<arg value="${path.phpmd.ruleset}"/>
					<arg value="--extensions=php"/>
					<arg value="--exclude"/>
					<arg value="${path.phpmd.ignored}"/>
				</exec>
			</then>
		</if>
	</target>

	<target name="phpstorm-inspect">
		<exec
			executable="${path.phpstorm-inspect.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg path="${path.phpstorm.inspect.sh}"/>
			<arg path="${path.phpstorm.system}"/>
			<arg path="${path.phpstorm.project}"/>
			<arg path="${path.phpstorm.project.inspection-profile}"/>
			<arg path="${path.src}"/>
		</exec>
	</target>

	<target name="selenium-start">
		<exec
				executable="${path.java.executable}"
				logoutput="true"
				passthru="true"
				checkreturn="true"
				>
			<arg value="-jar" />
			<arg path="vendor/se/selenium-server-standalone/bin/selenium-server-standalone.jar" />
		</exec>
	</target>

	<target name="standards-fix-diff">
		<phingcall target="phpcs-fixer-fix-diff" />
		<trycatch>
			<try>
				<phingcall target="phpcs-diff" />
			</try>
			<catch>
				<phingcall target="phpcbf-diff" />
			</catch>
		</trycatch>
	</target>

	<target name="tests-acceptance" depends="test-db-dump">
		<available file="${path.env.test}" type="file" property="path.env.test.existed" />
		<if>
			<not>
				<equals arg1="${path.env.test.existed}" arg2="true" />
			</not>
			<then>
				<touch file="${path.root}/TEST" />
			</then>
		</if>

		<trycatch>
			<try>
				<exec
				executable="${path.codeception.executable}"
				logoutput="true"
				passthru="true"
				checkreturn="true"
				>
					<arg value="run" />
					<arg value="--config=${path.codeception.configuration}" />
				</exec>
			</try>
			<finally>
				<if>
					<not>
						<equals arg1="${path.env.test.existed}" arg2="true" />
					</not>
					<then>
						<delete file="${path.root}/TEST" />
					</then>
				</if>
			</finally>
		</trycatch>
	</target>

	<target name="tests-acceptance-build">
		<exec
			executable="${path.codeception.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="build" />
			<arg value="--config=${path.codeception.configuration}" />
		</exec>
	</target>

	<target name="tests-crawler">
		<exec
				executable="${path.phpunit.executable}"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="--colors=always"/>
			<arg value="--configuration"/>
			<arg value="${path.phpunit.configuration}"/>
			<arg value="--testsuite"/>
			<arg value="Crawler"/>
		</exec>
	</target>

	<target name="tests-db">
		<exec
			executable="${path.phpunit.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="--colors=always"/>
			<arg value="--configuration"/>
			<arg value="${path.phpunit.configuration}"/>
			<arg value="--testsuite"/>
			<arg value="Database"/>
		</exec>
	</target>

	<target name="tests-performance">
		<exec
				executable="${path.phpunit.executable}"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="--colors=always"/>
			<arg value="--configuration"/>
			<arg value="${path.phpunit.configuration}"/>
			<arg value="--testsuite"/>
			<arg value="Performance"/>
			<arg value="--exclude-group"/>
			<arg value="warmup"/>
		</exec>
	</target>

	<target name="tests-performance-warmup">
		<exec
				executable="${path.phpunit.executable}"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="--colors=always"/>
			<arg value="--configuration"/>
			<arg value="${path.phpunit.configuration}"/>
			<arg value="--testsuite"/>
			<arg value="Performance"/>
			<arg value="--group"/>
			<arg value="warmup"/>
		</exec>
	</target>

	<target name="tests-unit">
		<exec
				executable="${path.phpunit.executable}"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="--colors=always"/>
			<arg value="--configuration"/>
			<arg value="${path.phpunit.configuration}"/>
			<arg value="--testsuite"/>
			<arg value="Unit"/>
		</exec>
	</target>

	<target name="test-create-domains-data">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:domains-data:create" />
			<arg value="--env=test" />
		</exec>
	</target>

	<target name="test-db-check-schema">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="ss6:schema:check" />
		</exec>
	</target>

	<target name="test-db-create">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="ss6:schema:create" />
		</exec>
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="ss6:schema:import-default" />
		</exec>
	</target>

	<target name="test-db-drop">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="ss6:schema:drop" />
		</exec>
	</target>

	<target name="test-db-dump">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="ss6:database:dump" />
			<arg value="--pgdump-bin=${path.pg_dump.executable}" />
			<arg value="${path.test.database.dump}" />
		</exec>
	</target>

	<target name="test-db-fixtures-base-settings">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="doctrine:fixtures:load" />
			<arg value="--fixtures=${path.src}/SS6/ShopBundle/DataFixtures/Base" />
			<arg value="--append" />
			<arg value="--no-interaction" />
		</exec>
	</target>

	<target name="test-db-fixtures-demo">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="doctrine:fixtures:load" />
			<arg value="--fixtures=${path.src}/SS6/ShopBundle/DataFixtures/Base" />
			<arg value="--fixtures=${path.src}/SS6/ShopBundle/DataFixtures/Demo" />
			<arg value="--append" />
			<arg value="--no-interaction" />
		</exec>
	</target>

	<target name="test-db-fixtures-performance">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="ss6:performance-data" />
		</exec>
	</target>

	<target name="test-db-migrations">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="--env=test" />
			<arg value="ss6:migrations:migrate" />
		</exec>
	</target>

	<target name="twig-lint">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="lint:twig" />
			<arg value="@SS6ShopBundle" />
		</exec>
	</target>

	<target name="twig-lint-diff" depends="diff-files">
		<if>
			<not>
				<equals arg1="${diff.files.twig}" arg2="" trim="true" />
			</not>
			<then>
				<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
					<arg value="app/console" />
					<arg value="lint:twig" />
					<arg line="${diff.files.twig}"/>
				</exec>
			</then>
		</if>
	</target>

	<target name="yaml-lint">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="lint:yaml" />
			<arg value="@SS6ShopBundle" />
		</exec>
	</target>

</project>
