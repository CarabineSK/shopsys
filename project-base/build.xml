<?xml version="1.0" encoding="UTF-8"?>
<project name="ShopSys6" default="build">

	<property file="${project.basedir}/build/build.local.properties" />

	<import file="build-dev.xml" />

	<property name="path.app" value="${path.root}/app"/>
	<property name="path.bin" value="${path.root}/bin"/>
	<property name="path.build" value="${path.root}/build"/>
	<property name="path.build.properties.local" value="${path.build}/build.local.properties"/>
	<property name="path.build.stats" value="${path.build}/stats"/>
	<property name="path.codeception.configuration" value="${path.build}/codeception.yml"/>
	<property name="path.codeception.executable" value ="${path.bin}/codecept"/>
	<property name="path.composer.executable" value="composer"/>
	<property name="path.env.test" value="${path.root}/TEST"/>
	<property name="path.grunt.executable" value="${path.root}/node_modules/.bin/grunt"/>
	<property name="path.java.executable" value="java"/>
	<property name="path.npm.executable" value="npm"/>
	<property name="path.pg_dump.executable" value="pg_dump"/>
	<property name="path.php.executable" value="php"/>
	<property name="path.phpcbf.executable" value="${path.bin}/phpcbf"/>
	<property name="path.phpcs.executable" value="${path.bin}/phpcs"/>
	<property name="path.phpcs.ruleset" value="${path.vendor}/shopsys/coding-standards/rulesetCS.xml"/>
	<property name="path.phpcs.ignored" value="_generated"/>
	<property name="path.phpcs-fixer.executable" value="${path.bin}/php-cs-fixer"/>
	<property name="path.phpcs-fixer.configuration" value="${path.build}/phpcs-fixer.php_cs"/>
	<property name="path.phplint.executable" value="${path.bin}/parallel-lint"/>
	<property name="path.phplint.ignored" value="${path.src}/SS6/ShopBundle/Tests/Test/Codeception/_generated"/>
	<property name="path.phpmd.executable" value="${path.bin}/phpmd"/>
	<property name="path.phpmd.ignored" value="_generated"/>
	<property name="path.phpmd.ruleset" value="${path.vendor}/shopsys/coding-standards/rulesetMD.xml"/>
	<property name="path.phpstorm.inspect.sh" value="/opt/PhpStorm-145.1616.3/bin/inspect.sh"/>
	<property name="path.phpstorm.project" value="${path.build}/phpstorm/ShopSys6/"/>
	<property name="path.phpstorm.project.inspection-profile" value="${path.build}/phpstorm/ShopSys6/.idea/inspectionProfiles/Project_Default.xml"/>
	<property name="path.phpstorm.system" value="/home/jenkins/.PhpStorm2016.1/system"/>
	<property name="path.phpstorm-inspect.executable" value="${path.bin}/phpstorm-inspect"/>
	<property name="path.phpunit.configuration" value="${path.app}/phpunit.xml"/>
	<property name="path.phpunit.executable" value="${path.bin}/phpunit"/>
	<property name="path.root" value="."/>
	<property name="path.src" value="${path.root}/src"/>
	<property name="path.test.database.dump" value="${path.app}/cache/test-db-dump.sql"/>
	<property name="path.translations.custom" value="${path.root}/src/SS6/ShopBundle/Resources/translations/custom"/>
	<property name="path.vendor" value="${path.root}/vendor"/>
	<property name="path.web" value="${path.root}/web"/>
	<property name="path.web.scripts" value="${path.web}/assets/scripts"/>
	<property name="path.web.styles.admin" value="${path.web}/assets/admin/styles"/>
	<property name="path.web.styles.front" value="${path.web}/assets/frontend/styles"/>

	<if>
		<os family="windows" />
		<then>
			<property name="dev.null" value="NUL"/>
		</then>
		<else>
			<property name="dev.null" value="/dev/null"/>
		</else>
	</if>

	<target name="build" depends="build-deploy-part-1-db-independent, build-deploy-part-2-db-dependent" description="Run build-deploy-part-1-db-independent, build-deploy-part-2-db-dependent (for production)"/>
	<target name="build-deploy-part-1-db-independent" depends="clean,composer,npm,domains-urls-check,assetic,assets,dirs-create,dump-translations-front-and-common" description="Build first part"/>
	<target name="build-deploy-part-2-db-dependent" depends="db-migrations,create-domains-data,replace-domains-urls,grunt,error-pages-generate,warmup" description="Build dependent second part"/>
	<target name="build-new" depends="clean,composer,npm,domains-urls-check,assetic,assets,dirs-clean,dirs-create,dump-translations-front-and-common,db-rebuild,grunt,error-pages-generate,warmup" description="Build with rebuild database (for production)"/>
	<target name="build-demo" depends="clean,composer,npm,domains-urls-check,assetic,assets,dirs-clean,dirs-create,dump-translations-front-and-common,db-demo,grunt,error-pages-generate,warmup" description="Similarly like build-new, but this creates a demo data (for production)"/>
	<target name="db-demo" depends="db-drop,db-create,db-migrations,db-fixtures-demo,create-domains-data,replace-domains-urls" description="Drop database, create database, install demo data"/>
	<target name="db-rebuild" depends="db-drop,db-create,db-migrations,db-fixtures-base-settings,create-domains-data,replace-domains-urls" description="Drop database, create database, install base data fixture"/>

	<target name="assetic" description="Symfony: Dumps all assets to the filesystem">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true" output="${dev.null}">
			<arg value="app/console" />
			<arg value="assetic:dump" />
		</exec>
	</target>

	<target name="assets" description="Symfony: Installs bundles web assets under a public web directory">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${path.root}/web/bundles/">
				<exclude name="/" />
			</fileset>
		</delete>
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="assets:install" />
			<arg value="${path.root}/web/" />
		</exec>
	</target>

	<target name="clean" description="Clean up directories with cache, logs, stats and scripts">
		<mkdir dir="${path.app}/cache" />
		<mkdir dir="${path.app}/logs" />
		<mkdir dir="${path.web.scripts}" />
		<mkdir dir="${path.build.stats}" />

		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${path.app}/cache/">
				<exclude name="/" />
			</fileset>
			<fileset dir="${path.app}/logs/">
				<exclude name="/" />
			</fileset>
			<fileset dir="${path.build.stats}/">
				<exclude name="/" />
			</fileset>
			<fileset dir="${path.web.scripts}/">
				<exclude name="/" />
			</fileset>
		</delete>
	</target>

	<target name="clean-styles" description="Clean directories with css/less">
		<mkdir dir="${path.web.styles.admin}" />
		<mkdir dir="${path.web.styles.front}" />
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${path.web.styles.admin}/">
				<exclude name="/" />
			</fileset>
			<fileset dir="${path.web.styles.front}/">
				<exclude name="/" />
			</fileset>
		</delete>
	</target>

	<target name="composer" description="Composer: Install dependencies excluding dev dependencies">
		<exec
			executable="${path.composer.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="install" />
			<arg value="--no-dev" />
		</exec>
	</target>

	<target name="create-domains-data" description="Create domains data for new domains">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:domains-data:create" />
		</exec>
	</target>

	<target name="cron" description="Maintenance service of ShopSys 6">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:cron" />
		</exec>
	</target>

	<target name="db-check-schema" description="Check if database schema is satisfying ORM and return a list of suggestions for repair schema">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="shopsys:migrations:check-schema" />
		</exec>
	</target>

	<target name="db-create" description="Create database public schema and import basic database structure (without migrations)">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:schema:create" />
		</exec>
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:schema:import-default" />
		</exec>
	</target>

	<target name="db-drop" description="Drop database public schema">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:schema:drop" />
		</exec>
	</target>

	<target name="db-fixtures-base-settings" description="Load base data fixtures">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="doctrine:fixtures:load" />
			<arg value="--fixtures=${path.src}/SS6/ShopBundle/DataFixtures/Base" />
			<arg value="--append" />
			<arg value="--no-interaction" />
		</exec>
	</target>

	<target name="db-fixtures-demo" description="Load base and demo data fixtures, run ss6:recalculations">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="doctrine:fixtures:load" />
			<arg value="--fixtures=${path.src}/SS6/ShopBundle/DataFixtures/Base" />
			<arg value="--fixtures=${path.src}/SS6/ShopBundle/DataFixtures/Demo" />
			<arg value="--append" />
			<arg value="--no-interaction" />
		</exec>
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:recalculations" />
		</exec>
	</target>

	<target name="db-migrations" description="Execute database migrations and check schema">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="shopsys:migrations:migrate" />
		</exec>
	</target>

	<target name="db-migrations-count" description="Get count of migrations to execute">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="shopsys:migrations:count" />
		</exec>
	</target>

	<target name="db-migrations-generate" description="Generate migration file if need it">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="shopsys:migrations:generate" />
		</exec>
	</target>

	<target name="dirs-clean" description="Clean up lock, docs and content directories">
 		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${path.app}/lock/">
 				<exclude name="/" />
 			</fileset>
			<fileset dir="${path.root}/docs/">
 				<exclude name="/" />
 			</fileset>
			<fileset dir="${path.web}/content/">
 				<exclude name="/" />
 			</fileset>
 		</delete>
 	</target>

	<target name="dirs-create" description="creates system directories like lock, docs, content, image, directory for uploaded files">
		<mkdir dir="${path.app}/lock" />
		<mkdir dir="${path.app}/errorPages" />
		<mkdir dir="${path.root}/docs/admin" />
		<mkdir dir="${path.root}/docs/frontend" />
		<mkdir dir="${path.web}/content" />
		<mkdir dir="${path.web}/content/feeds" />
		<mkdir dir="${path.web}/content/sitemaps" />

		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:image:directories" />
		</exec>

		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:uploaded-file:directories" />
		</exec>
	</target>

	<target name="domains-urls-check" description="Check the domains in domains_urls.yml">
		<if>
			<not>
				<available file='${path.app}/config/domains_urls.yml' type='file' />
			</not>
			<then>
				<fail message = "File domains_urls.yml does not exist. You should create it using domains_urls.yml.dist as a template."/>
			</then>
		</if>
	</target>

	<target name="dump-translations-front-and-common" description="Extracts translation messages from front-end and common code. Keep old translations for translated messages in administrations.">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="translation:extract" />
			<arg value="--bundle=SS6ShopBundle" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Controller" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Form" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Model" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Resources/views" />
			<arg value="--dir=${path.src}/SS6/ShopBundle/Resources/scripts" />
			<arg value="--exclude-dir=admin/plugins" />
			<arg value="--exclude-dir=frontend/plugins" />
			<arg value="--exclude-dir=admin" />
			<arg value="--exclude-dir=Admin" />
			<arg value="--keep" />
			<arg value="--output-format=po" />
			<arg value="--output-dir=${path.translations.custom}" />

			<arg value="en" />
		</exec>
	</target>

	<target name="error-pages-generate" description="Generate all error pages for production">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:error-page:generate-all" />
		</exec>
	</target>

	<target name="grunt" depends="gruntfile,clean-styles" description="Run gruntfile and clean-styles targets and generate css">
		<exec executable="${path.grunt.executable}" passthru="true" checkreturn="true" />
	</target>

	<target name="gruntfile" description="Generate Gruntfile.js by domain settings">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:generate:gruntfile" />
		</exec>
	</target>

	<target name="img-demo" description="Install demo images">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:image:demo" />
		</exec>
	</target>

	<target name="maintenance-off" description="Turn off maintenance page">
		<delete file="${path.root}/MAINTENANCE" />
	</target>

	<target name="maintenance-on" description="Turn on maintenance page">
		<touch file="${path.root}/MAINTENANCE" />
	</target>

	<target name="npm" description="Install modules required for grunt">
		<exec
			executable="${path.npm.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="install"/>
		</exec>
	</target>

	<target name="replace-domains-urls" description="Replace domains urls in database by urls in domains config">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="ss6:domains-urls:replace" />
		</exec>
	</target>

	<target name="warmup" description="Symfony: Warms up an empty cache">
		<exec executable="${path.php.executable}" passthru="true" checkreturn="true">
			<arg value="app/console" />
			<arg value="cache:warmup" />
		</exec>
	</target>

</project>
